{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { profileError, profileLoading, profileSuccess, questionError, questionLoading, questionSuccess } from '../../redux/student/Actions';\nimport { updateScore } from '../../redux/student/Actions';\nimport '../styles/Coursecard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TakeTest = () => {\n  _s();\n  let test = useParams();\n  const {\n    qlist\n  } = useSelector(state => state.student.questions);\n  const {\n    score\n  } = useSelector(state => state.student.scores);\n  const token = JSON.parse(sessionStorage.student_token);\n  const {\n    data\n  } = useSelector(state => state.student.profile);\n  let dispatch = useDispatch();\n  let usableid = data[0].Student_id;\n  const [index, setIndex] = useState(0);\n  const [qnumber, setQnumber] = useState(1);\n  let evaluate = (x, y) => {};\n  let testid = Number(test.testid);\n  let submit = () => {\n    console.log(score);\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/courseapi/score/\",\n      data: {\n        Score: score,\n        Test_id: testid,\n        Student_id: usableid\n      }\n    }).then(res => {\n      alert(\"Submitted Successfully\");\n    }).catch(err => {\n      alert(\"Error.\");\n    });\n  };\n  let getuser = () => {\n    dispatch(profileLoading());\n    axios({\n      method: \"post\",\n      url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n      data: {\n        Email: token.Email,\n        Password: token.Password\n      }\n    }).then(response => {\n      dispatch(profileSuccess(response.data));\n    }).catch(error => {\n      dispatch(profileError());\n    });\n  };\n  let getQuestions = () => {\n    dispatch(questionLoading());\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/courseapi/getquestions/\",\n      data: {\n        Test_id: test.testid\n      }\n    }).then(res => {\n      dispatch(questionSuccess(res.data.data));\n    }).catch(err => {\n      dispatch(questionError());\n    });\n  };\n  useEffect(() => {\n    getQuestions();\n    getuser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: qlist ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coursecard-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coursecard-title\",\n          children: [\"Question: \", qnumber, \" / \", qlist.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coursecard-title\",\n          children: qlist[index].Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-button\",\n          style: {\n            width: \"max-content\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: \"2px\"\n          },\n          children: qlist[index].Option1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-button\",\n          style: {\n            width: \"max-content\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: \"2px\"\n          },\n          children: qlist[index].Option2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-button\",\n          style: {\n            width: \"max-content\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: \"2px\"\n          },\n          children: qlist[index].Option3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-button\",\n          onClick: e => {\n            evaluate(qlist[index].Option4, qlist[index].Correct);\n          },\n          style: {\n            width: \"max-content\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: \"2px\"\n          },\n          children: qlist[index].Option4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Questions Assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(TakeTest, \"rdoBGXXSAmga2fTyZCT6m93Kx+k=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = TakeTest;\nexport default TakeTest;\nvar _c;\n$RefreshReg$(_c, \"TakeTest\");","map":{"version":3,"names":["axios","React","useEffect","useState","useDispatch","useSelector","useParams","profileError","profileLoading","profileSuccess","questionError","questionLoading","questionSuccess","updateScore","TakeTest","test","qlist","state","student","questions","score","scores","token","JSON","parse","sessionStorage","student_token","data","profile","dispatch","usableid","Student_id","index","setIndex","qnumber","setQnumber","evaluate","x","y","testid","Number","submit","console","log","method","url","Score","Test_id","then","res","alert","catch","err","getuser","Email","Password","response","error","getQuestions","length","Question","width","marginLeft","marginRight","borderRadius","Option1","Option2","Option3","e","Option4","Correct"],"sources":["/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { profileError, profileLoading, profileSuccess, questionError, questionLoading, questionSuccess } from '../../redux/student/Actions';\nimport { updateScore } from '../../redux/student/Actions';\nimport '../styles/Coursecard.css';\n\nconst TakeTest = () => {\n  \n    let test=useParams();\n    const {qlist}=useSelector(state=>state.student.questions);\n    const {score}=useSelector((state=>state.student.scores));\n    const token=JSON.parse(sessionStorage.student_token);\n    const {data}=useSelector(state=>state.student.profile)\n    let dispatch=useDispatch();\n    let usableid=data[0].Student_id;\n    const[index,setIndex]=useState(0);\n    const[qnumber,setQnumber]=useState(1);\n\n    let evaluate=(x,y)=>{\n\n    }\n    \n    let testid=Number(test.testid)\n       let submit=()=>{\n      console.log(score);\n      axios({\n        method:\"post\",\n        url:\"http://localhost:8000/courseapi/score/\",\n        data:{\n          Score:score,\n          Test_id:testid,\n          Student_id:usableid\n        }\n    }).then((res)=>{\n      alert(\"Submitted Successfully\");\n    }).catch((err)=>{\n      alert(\"Error.\");\n    })\n\n  }\n\n    let getuser=()=>{\n      dispatch(profileLoading())\n        axios({\n          method: \"post\",\n          url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n          data:{\n            Email:token.Email,\n            Password:token.Password\n            }\n      }).then((response)=>{\n        dispatch(profileSuccess(response.data));\n      }).catch((error)=>{\n        dispatch(profileError());\n      })\n      }\n\n    let getQuestions=()=>{\n        dispatch(questionLoading());\n          axios({\n            method:\"post\",\n            url:\"http://localhost:8000/courseapi/getquestions/\",\n            data:{\n              Test_id:test.testid\n            }\n          }).then((res)=>{\n            dispatch(questionSuccess(res.data.data));\n          }).catch((err)=>{\n            dispatch(questionError());\n          })\n        }\n        useEffect(()=>{\n          getQuestions();\n          getuser();\n        },[])\n  return (\n    <>\n    {qlist? (<>\n    <div className=\"coursecard-wrapper\">\n     <p className='coursecard-title'>Question: {qnumber} / {qlist.length}</p>\n     <br></br>\n     <p className='coursecard-title'>{qlist[index].Question}</p>\n     <button  className='card-button' style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\",borderRadius:\"2px\"}}>\n      {qlist[index].Option1}\n      </button>\n    <button  className='card-button' style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\",borderRadius:\"2px\"}}>\n     {qlist[index].Option2}\n    </button>\n    <button  className='card-button' style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\",borderRadius:\"2px\"}}>\n      {qlist[index].Option3}\n      </button>\n    <button  className='card-button' onClick={(e)=>{evaluate(qlist[index].Option4, qlist[index].Correct)}}\n     style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\",borderRadius:\"2px\"}}>\n     {qlist[index].Option4}\n    </button>\n    </div>\n</>):(<><p>No Questions Assigned.</p></>)}\n    </>\n  )\n}\n\nexport default TakeTest"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { profileError, profileLoading, profileSuccess, questionError, questionLoading, questionSuccess } from '../../redux/student/Actions';\nimport QuestionCard from './QuestionCard';\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TakeTest = () => {\n  _s();\n  let test = useParams();\n  const {\n    qlist\n  } = useSelector(state => state.student.questions);\n  const {\n    score\n  } = useSelector(state => state.student.scores);\n  const token = JSON.parse(sessionStorage.student_token);\n  const {\n    data\n  } = useSelector(state => state.student.profile);\n  let dispatch = useDispatch();\n  let submit = () => {\n    console.log(score);\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/courseapi/score/\",\n      data: {\n        Score: score,\n        Test_id: test.testid,\n        Student_id: data[0].Student_id\n      }\n    }).then(res => {\n      alert(\"Submitted Successfully\");\n    }).catch(err => {\n      alert(\"Error.\");\n    });\n  };\n  let getuser = () => {\n    dispatch(profileLoading());\n    axios({\n      method: \"post\",\n      url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n      data: {\n        Email: token.Email,\n        Password: token.Password\n      }\n    }).then(response => {\n      dispatch(profileSuccess(response.data));\n    }).catch(error => {\n      dispatch(profileError());\n    });\n  };\n  let getQuestions = () => {\n    dispatch(questionLoading());\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/courseapi/getquestions/\",\n      data: {\n        Test_id: test.testid\n      }\n    }).then(res => {\n      dispatch(questionSuccess(res.data.data));\n    }).catch(err => {\n      dispatch(questionError());\n    });\n  };\n  useEffect(() => {\n    getQuestions();\n    getuser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: qlist ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [qlist.map(ele => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_createElement(QuestionCard, {\n          ...ele,\n          key: ele.Question_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        })\n      }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"max-content\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-button\",\n          style: {\n            width: \"max-content\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          },\n          onClick: submit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Questions Assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(TakeTest, \"fC7QnjtKiyeFleoVQLaQCTjb5IM=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = TakeTest;\nexport default TakeTest;\nvar _c;\n$RefreshReg$(_c, \"TakeTest\");","map":{"version":3,"names":["axios","React","useEffect","useDispatch","useSelector","useParams","profileError","profileLoading","profileSuccess","questionError","questionLoading","questionSuccess","QuestionCard","TakeTest","test","qlist","state","student","questions","score","scores","token","JSON","parse","sessionStorage","student_token","data","profile","dispatch","submit","console","log","method","url","Score","Test_id","testid","Student_id","then","res","alert","catch","err","getuser","Email","Password","response","error","getQuestions","map","ele","Question_id","width","marginLeft","marginRight"],"sources":["/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { profileError, profileLoading, profileSuccess, questionError, questionLoading, questionSuccess } from '../../redux/student/Actions';\nimport QuestionCard from './QuestionCard';\n\nconst TakeTest = () => {\n  \n    let test=useParams();\n    const {qlist}=useSelector(state=>state.student.questions);\n    const {score}=useSelector((state=>state.student.scores));\n    const token=JSON.parse(sessionStorage.student_token);\n    const {data}=useSelector(state=>state.student.profile)\n    let dispatch=useDispatch();\n\n    let submit=()=>{\n      console.log(score);\n      axios({\n        method:\"post\",\n        url:\"http://localhost:8000/courseapi/score/\",\n        data:{\n          Score:score,\n          Test_id:test.testid,\n          Student_id:data[0].Student_id\n        }\n    }).then((res)=>{\n      alert(\"Submitted Successfully\");\n    }).catch((err)=>{\n      alert(\"Error.\");\n    })\n\n  }\n\n    let getuser=()=>{\n      dispatch(profileLoading())\n        axios({\n          method: \"post\",\n          url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n          data:{\n            Email:token.Email,\n            Password:token.Password\n            }\n      }).then((response)=>{\n        dispatch(profileSuccess(response.data));\n      }).catch((error)=>{\n        dispatch(profileError());\n      })\n      }\n\n    let getQuestions=()=>{\n        dispatch(questionLoading());\n          axios({\n            method:\"post\",\n            url:\"http://localhost:8000/courseapi/getquestions/\",\n            data:{\n              Test_id:test.testid\n            }\n          }).then((res)=>{\n            dispatch(questionSuccess(res.data.data));\n          }).catch((err)=>{\n            dispatch(questionError());\n          })\n        }\n        useEffect(()=>{\n          getQuestions();\n          getuser();\n        },[])\n  return (\n    <>\n    {qlist? (<>\n    {qlist.map((ele)=>(\n        <>\n        <QuestionCard {...ele} key={ele.Question_id}/>\n        </>\n    ))}\n    <div style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n    <button className='card-button' style={{width:\"max-content\",marginLeft:\"auto\",marginRight:\"auto\"}} onClick={submit}>Submit</button>\n    </div></>):(<><p>No Questions Assigned.</p></>)}\n    </>\n  )\n}\n\nexport default TakeTest"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
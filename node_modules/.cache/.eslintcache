[{"/Users/apple/Desktop/online-exam-frontend/src/index.js":"1","/Users/apple/Desktop/online-exam-frontend/src/redux/reducer.js":"2","/Users/apple/Desktop/online-exam-frontend/src/components/Navbar.jsx":"3","/Users/apple/Desktop/online-exam-frontend/src/components/Home.jsx":"4","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Staffportal.jsx":"5","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Stafflogin.jsx":"6","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffRegister.jsx":"7","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/AddCourse.jsx":"8","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffCourse.jsx":"9","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffStudent.jsx":"10","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentPortal.jsx":"11","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentLogin.jsx":"12","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentCourses.jsx":"13","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentSubscriptions.jsx":"14","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentRegister.jsx":"15","/Users/apple/Desktop/online-exam-frontend/src/redux/staff/Reducer.js":"16","/Users/apple/Desktop/online-exam-frontend/src/redux/student/Reducer.js":"17","/Users/apple/Desktop/online-exam-frontend/src/redux/student/Actions.js":"18","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Staffnavbar.jsx":"19","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Studentnavbar.jsx":"20","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentCourseCard.jsx":"21","/Users/apple/Desktop/online-exam-frontend/src/redux/staff/ActionTypes.js":"22","/Users/apple/Desktop/online-exam-frontend/src/redux/student/ActionTypes.js":"23","/Users/apple/Desktop/online-exam-frontend/src/redux/staff/Actions.js":"24","/Users/apple/Desktop/online-exam-frontend/src/App.js":"25","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/AddTest.jsx":"26","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Addquestion.jsx":"27","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Subscribedcard.jsx":"28","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Tests.jsx":"29","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx":"30","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/QuestionCard.jsx":"31"},{"size":636,"mtime":1668072871097,"results":"32","hashOfConfig":"33"},{"size":277,"mtime":1668079948241,"results":"34","hashOfConfig":"33"},{"size":1568,"mtime":1668100537190,"results":"35","hashOfConfig":"33"},{"size":171,"mtime":1668084250697,"results":"36","hashOfConfig":"33"},{"size":2329,"mtime":1668161507702,"results":"37","hashOfConfig":"33"},{"size":3600,"mtime":1668112915408,"results":"38","hashOfConfig":"33"},{"size":5477,"mtime":1668107088369,"results":"39","hashOfConfig":"33"},{"size":1919,"mtime":1668422305234,"results":"40","hashOfConfig":"33"},{"size":3238,"mtime":1668685542304,"results":"41","hashOfConfig":"33"},{"size":3072,"mtime":1668365748130,"results":"42","hashOfConfig":"33"},{"size":2376,"mtime":1668544796678,"results":"43","hashOfConfig":"33"},{"size":3896,"mtime":1668151033155,"results":"44","hashOfConfig":"33"},{"size":2151,"mtime":1668544465741,"results":"45","hashOfConfig":"33"},{"size":2650,"mtime":1668681600621,"results":"46","hashOfConfig":"33"},{"size":4784,"mtime":1667928272461,"results":"47","hashOfConfig":"33"},{"size":5862,"mtime":1668455476458,"results":"48","hashOfConfig":"33"},{"size":5115,"mtime":1668666192318,"results":"49","hashOfConfig":"33"},{"size":2670,"mtime":1668666019433,"results":"50","hashOfConfig":"33"},{"size":1555,"mtime":1668084678898,"results":"51","hashOfConfig":"33"},{"size":1404,"mtime":1668084110427,"results":"52","hashOfConfig":"33"},{"size":1520,"mtime":1668508098848,"results":"53","hashOfConfig":"33"},{"size":1328,"mtime":1668455113494,"results":"54","hashOfConfig":"33"},{"size":1192,"mtime":1668665960220,"results":"55","hashOfConfig":"33"},{"size":2990,"mtime":1668455229053,"results":"56","hashOfConfig":"33"},{"size":3149,"mtime":1668621798473,"results":"57","hashOfConfig":"33"},{"size":2213,"mtime":1668685249142,"results":"58","hashOfConfig":"33"},{"size":3811,"mtime":1668491701370,"results":"59","hashOfConfig":"33"},{"size":1365,"mtime":1668606760085,"results":"60","hashOfConfig":"33"},{"size":1374,"mtime":1668622074825,"results":"61","hashOfConfig":"33"},{"size":2484,"mtime":1668677733761,"results":"62","hashOfConfig":"33"},{"size":1401,"mtime":1668668929094,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"7wb72n",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"71"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"71"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"71"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/apple/Desktop/online-exam-frontend/src/index.js",[],[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/reducer.js",[],[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/Navbar.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/Home.jsx",["171"],[],"import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './styles/Staffnavbar.css';\nconst Home = () => {\n  return (\n  <></>\n  )\n}\n\nexport default Home","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Staffportal.jsx",["172"],[],"import React, { useEffect } from 'react'\nimport Staffnavbar from \"./Staffnavbar\"\nimport '../styles/Profile.css'\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { profileError, profileLoading, profileSuccess, staffLogout } from '../../redux/staff/Actions';\nimport axios from 'axios';\n\nconst Staffportal = () => {\nconst token=JSON.parse(sessionStorage.staff_token);\nconst navigate = useNavigate();\nlet dispatch=useDispatch();\n\nconst {data}=useSelector(state=>state.staff.profile)\n\nlet logout=()=>{\nsessionStorage.removeItem(\"staff_token\");\nsessionStorage.removeItem(\"staffid\");\ndispatch(staffLogout());\nnavigate('/');\n}\n\nlet getuser=()=>{\ndispatch(profileLoading())\n  axios({\n    method: \"post\",\n    url: 'http://localhost:8000/managerapi/getloggedinstaff/',\n    data:{\n      Email:token.Email,\n      Password:token.Password\n      }\n}).then((response)=>{\n  sessionStorage.setItem(\"staffid\",JSON.stringify(response.data))\n  dispatch(profileSuccess(response.data));\n}).catch((error)=>{\n  dispatch(profileError());\n  let errmessage=error.response.data.Email;\n  alert(\"Error :\"+errmessage);\n})\n}\nuseEffect(()=>{\n  getuser();\n},[])\n\n  return (\n    <>\n       <Staffnavbar/>\n       {data.map((el) => (<>\n       <div className='profile-wrapper'>\n       <h3 style={{color:\"#28a745\", textAlign:\"center\",fontSize:\"2vw\",padding:'0px',margin:'0px',fontWeight:\"500\"}}>Profile</h3>\n          <div className='profile-main'>\n          <div className=\"profile\">\n          <p className='profile-label'>Name</p>\n\n          <p className='profile-label'>Email</p>\n\n          <p className='profile-label'>Staff ID</p>\n\n          <p className='profile-label'>Designation</p>\n          </div>\n          <div className=\"profile2\">\n\n          <p className='profile-info'>{el.Name}</p>\n\n          <p className='profile-info'>{el.Email}</p>\n\n          <p className='profile-info'>{el.Staff_id}</p>\n\n          <p className='profile-info'>{el.Designation}</p>\n\n          </div>\n          </div>\n        <div style={{width:\"fit-content\",marginRight:\"0px\",marginLeft:\"auto\"}}>\n        <button className='profile-button' disabled>Edit</button>\n        <button className='profile-button' onClick={logout}>Log Out</button>\n        </div>\n       </div>\n    </>\n    ))}\n </> )\n}\n\nexport default Staffportal","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Stafflogin.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffRegister.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/AddCourse.jsx",["173"],[],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addcourseError, addcourseLoading, addcourseSuccess } from '../../redux/staff/Actions';\nimport Staffnavbar from \"./Staffnavbar\";\n\nconst AddCourse = () => {\n  const[email,setEmail]=useState(\"\");\n  const[password,setPassword]=useState(\"\");\n  const {data}=JSON.parse(sessionStorage.staffid);\n  let id=data[0].Staff_id;\n  let dispatch=useDispatch();\n  // const[test,setTest]=useState(\"\");\n  // let testlist=[{id:\"\",name:\"\"},{id:\"1\",name:\"HTML\"},{id:\"2\",name:\"CSS\"},{id:\"3\",name:\"JavaScript\"}]\n  let handleAction=()=>{\n   if(!email){\n    alert(\"Please Enter Course Name\");\n   }\n   else if(password.length<500){\n    alert(\"Description can't be less then 500 characters\");\n   }\n   else{\n    dispatch(addcourseLoading());\n    axios({\n      method:\"post\",\n      url:'http://localhost:8000/courseapi/course/',\n      data:{\n        Name:email,\n        Description:password,\n        Author:id,\n      }\n    }).then((response)=>{\n     dispatch(addcourseSuccess());\n    }).catch((error)=>{\n      alert(error);\n      dispatch(addcourseError());\n    })\n   }\n  }\n  return (\n  <>\n    <Staffnavbar/>\n    <div className='form-wrapper'>\n    <h3 style={{color:\"#28a745\", textAlign:\"center\",fontSize:\"2vw\",padding:'0px',margin:'0px',fontWeight:\"500\"}}>Add Course</h3>\n         <p className='form-label'>Course Name</p>\n         <input className='course-form-input' type='text' value={email} onChange={(event=>setEmail(event.target.value))}/>\n         <p className='form-label'>Description</p>\n         <textarea rows = \"7\" className='course-form-textfield' placeholder=\"2000 characters maximum....\" type='text' value={password} onChange={(event=>setPassword(event.target.value))}/>\n\n         <button className='form-button' onClick={handleAction}>Create</button>\n    </div>\n  </>\n  )\n}\n\nexport default AddCourse","/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffCourse.jsx",["174","175","176","177"],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/StaffStudent.jsx",["178"],[],"import React from 'react';\nimport Staffnavbar from './Staffnavbar';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { listError, listLoading, listSuccess } from '../../redux/staff/Actions';\nimport '../styles/Forms.css';\nimport '../styles/Profile.css'\n\n\nconst StaffStudent = () => {\nconst dispatch=useDispatch();\n\nconst {data}= useSelector(state=>state.staff.list);\n//fetch the student data\nlet handlefetch=()=>{\ndispatch(listLoading())\n  axios({\n    method: \"get\",\n    url: 'http://localhost:8000/managerapi/student/',\n}).then((response)=>{\n  dispatch(listSuccess(response.data));\n  // alert(\"Disabled successfully\")\n}).catch((error)=>{\n  dispatch(listError());\n  let errmessage=error.response.data.Email;\n  alert(\"Error :\"+errmessage);\n})\n}\nuseEffect(()=>{\n  handlefetch();\n},[])\n//disable the student\nlet disable=(key)=>{\naxios({\n    method: \"patch\",\n    url: `http://localhost:8000/managerapi/student/${key}/`,\n    data:{\n      isActive:false\n    },\n}).then((response)=>{\n  handlefetch();\n}).catch((error)=>{\n  let errmessage=error.response.data.Email;\n  alert(\"Error :\"+errmessage);\n})\n}\nlet enable=(key)=>{\n  axios({\n      method: \"patch\",\n      url: `http://localhost:8000/managerapi/student/${key}/`,\n      data:{\n        isActive:true\n      },\n  }).then((response)=>{\n    handlefetch();\n  }).catch((error)=>{\n    let errmessage=error.response.data.Email;\n    alert(\"Error :\"+errmessage);\n  })\n  }\n  return (<>\n    <Staffnavbar/>\n    <div style={{marginTop:\"3vw\",display:\"grid\",width:\"95%\",marginLeft:\"auto\",marginRight:\"auto\",\n    position:\"relative\",gridTemplateColumns:\"repeat(3, 1fr)\"}} >\n        {data.map((ele) => (<>{(ele.isActive)?(<div id=\"card\" style={{width:\"90%\", padding:\"1vw\", border:\"1px solid #28a745\", marginLeft:\"auto\", \n        marginRight:\"auto\",marginBottom:\"1.5vw\"}} key={ele.Student_id}>\n\n        <p className='profile-info'><b>Name :</b> {ele.Name}</p>\n        <p className='profile-info'><b>Email :</b> {ele.Email}</p>\n        <p className='profile-info'><b>Field_of_study :</b> {ele.Field_of_study}</p>\n        <div style={{width:\"fit-content\",marginRight:\"0px\",marginLeft:\"auto\",marginTop:'0px',marginBottom:'0px'}}>\n        <button className='profile-button' onClick={()=>disable(ele.Student_id)}>Disable</button>\n        </div>\n        </div>):(<div id=\"card\" style={{width:\"90%\", padding:\"1vw\", border:\"1px solid grey\", marginLeft:\"auto\", \n        marginRight:\"auto\",marginBottom:\"1.5vw\",opacity:\"70%\"}} key={ele.Student_id}>\n        <p className='profile-info'><b>Name :</b> {ele.Name}</p>\n        <p className='profile-info'><b>Email :</b> {ele.Email}</p>\n        <p className='profile-info'><b>Field_of_study :</b> {ele.Field_of_study}</p>\n        <div style={{width:\"fit-content\",marginRight:\"0px\",marginLeft:\"auto\",marginTop:'0px',marginBottom:'0px'}}>\n        <button className='profile-button-disabled' onClick={()=>enable(ele.Student_id)}>Enable</button>\n        </div>\n        </div>)}</>))}\n        </div>\n        </>)\n}\n\nexport default StaffStudent","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentPortal.jsx",["179"],[],"import React, { useEffect } from 'react'\nimport Studentnavbar from './Studentnavbar'\nimport '../styles/Profile.css'\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { profileError, profileLoading, profileSuccess, studentLogout } from '../../redux/student/Actions';\nimport axios from 'axios';\n\nconst StudentPortal = () => {\nconst token=JSON.parse(sessionStorage.student_token);\nconst navigate = useNavigate();\nlet dispatch=useDispatch();\nconst {data}=useSelector(state=>state.student.profile)\n\nlet logout=()=>{\n  sessionStorage.removeItem(\"student_token\");\n  dispatch(studentLogout());\n  navigate('/');\n  }\n\n  let getuser=()=>{\n    dispatch(profileLoading())\n      axios({\n        method: \"post\",\n        url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n        data:{\n          Email:token.Email,\n          Password:token.Password\n          }\n    }).then((response)=>{\n      dispatch(profileSuccess(response.data));\n    }).catch((error)=>{\n      dispatch(profileError());\n      let errmessage=error.response.data.Email;\n      alert(\"Error :\"+errmessage);\n    })\n    }\n    useEffect(()=>{\n      getuser();\n    },[])\n\n  return (\n    <>\n        <Studentnavbar/>\n      {data.map((el) => (<>\n       <div className='profile-wrapper' key={el.Student_id}>\n       <h3 style={{color:\"#28a745\", textAlign:\"center\",fontSize:\"2vw\",padding:'0px',margin:'0px',fontWeight:\"500\"}}>Profile</h3>\n          <div className='profile-main'>\n          <div className=\"profile\">\n          <p className='profile-label'>Name</p>\n\n          <p className='profile-label'>Email</p>\n\n          <p className='profile-label'>Student ID</p>\n\n          <p className='profile-label'>Field_of_study</p>\n          </div>\n          <div className=\"profile2\">\n\n          <p className='profile-info'>{el.Name}</p>\n\n          <p className='profile-info'>{el.Email}</p>\n\n          <p className='profile-info'>{el.Student_id}</p>\n\n          <p className='profile-info'>{el.Field_of_study}</p>\n\n          </div>\n          </div>\n        <div style={{width:\"fit-content\",marginRight:\"0px\",marginLeft:\"auto\"}}>\n        {/* <button className='profile-button' diabled>Edit</button> */}\n        <button className='profile-button' onClick={logout}>Log Out</button>\n        </div>\n       </div>\n    </>\n    ))}\n    </>\n  )\n}\n\nexport default StudentPortal","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentLogin.jsx",["180","181"],[],"import React, { useState } from 'react'\nimport Studentnavbar from './Studentnavbar'\nimport '../styles/Forms.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginError, loginLoading, loginstudentSuccess} from '../../redux/student/Actions';\nimport axios from 'axios';\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nconst StudentLogin = () => {\n  const[email,setEmail]=useState(\"\");\n  const[password,setPassword]=useState(\"\");\n  const[confirmpass,setConformpass]=useState(\"\");\n  const dispatch=useDispatch();\n  const navigate = useNavigate();\n  // let student_token=useSelector(state=>state.student.login.student_token);\n\n  //login function\n  let login=()=>{\n    dispatch(loginLoading())\n      axios({\n          method:\"post\",\n          url: 'http://localhost:8000/managerapi/studentlogin/',\n          data:{Email:email,\n          Password:password}\n      }).then((response)=>{\n        sessionStorage.setItem(\"student_token\",JSON.stringify(response.data))\n        dispatch(loginstudentSuccess(response.data));\n        alert(\"Login Successful\")\n        navigate('/student/profile');\n      }).catch((error)=>{\n        dispatch(loginError());\n        let errmessage=\"Invalid credientials\";\n        alert(\"Error :\"+errmessage);\n      })\n  }\n  let handleLogin=()=>{\n  //targetting elements to show alerts.\n  let targetemail=document.getElementById(\"email\");\n  let targetpass=document.getElementById(\"password\");\n  let targetconfirmpass=document.getElementById(\"confirm\"); \n\n    let emailcheck= /\\S+@\\S+\\.\\S+/;\n    if(!email){\n      targetemail.className=\"form-input-alert\";\n      targetemail.value=\"⚠ Please enter email\";\n    }\n    else if(!emailcheck.test(email)){\n      targetemail.className=\"form-input-alert\";  \n      targetemail.value=\"⚠ Invalid email! Please enter a valid email\";\n    }\n    else if(!password){\n      targetpass.className=\"form-input-alert\";\n      targetpass.type=\"text\";  \n      targetpass.value=\"⚠ Please enter password\";\n    }\n    else if(!confirmpass){\n      targetconfirmpass.className=\"form-input-alert\"; \n      targetconfirmpass.type=\"text\";\n      targetconfirmpass.value=\"⚠ Please confirm password\"\n    }\n    else if(password!==confirmpass){\n      targetconfirmpass.className=\"form-input-alert\";\n      targetconfirmpass.type=\"text\";\n      targetconfirmpass.value=\"⚠ Password and Confirm passsword should be same\";\n    }\n    else{\n    login();\n    }\n  }\n  return (\n    <>\n    <Studentnavbar/>\n    <div className='form-wrapper'>\n    <h3 style={{color:\"#28a745\", textAlign:\"center\",fontSize:\"2.5vw\",padding:'0px',margin:'0px',fontWeight:\"500\"}}>Login form</h3>\n         <p className='form-label'>Email</p>\n         {/* <p id=\"aa\" className='alertfield'>{alert}</p> */}\n         <input id=\"email\" className=\"form-input\" type='text' value={email} \n         onChange={(event=>{setEmail(event.target.value)})}\n         onFocus={(e=>{e.target.className=\"form-input\" \n         e.target.value=\"\"})}\n         />\n         <p className='form-label'>Password</p>\n         {/* <p id=\"bb\" className='alertfield'>{alert}</p> */}\n         <input id=\"password\" className=\"form-input\" type='password' value={password}\n          onChange={(event=>setPassword(event.target.value))}\n          onFocus={(e=>{e.target.className=\"form-input\"\n          e.target.value=\"\"\n          e.target.type=\"password\"})}\n          />\n         <p className='form-label'>Confirm Password</p>\n         {/* <p id=\"cc\" className='alertfield'>{alert}</p> */}\n         <input id=\"confirm\" className=\"form-input\" type='password' value={confirmpass} \n         onChange={(event=>setConformpass(event.target.value))}\n         onFocus={(e=>{e.target.className=\"form-input\"\n         e.target.value=\"\"\n         e.target.type=\"password\"})}\n         />\n         <button className='form-button' onClick={handleLogin}>Login</button>\n    </div>\n    </>\n  )\n}\n\nexport default StudentLogin","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentCourses.jsx",["182"],[],"import axios from 'axios'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getcourseError, getcourseLoading, getcourseSuccess,profileError, profileLoading, profileSuccess} from '../../redux/student/Actions'\nimport StudentCourseCard from './StudentCourseCard'\nimport Studentnavbar from './Studentnavbar'\n\nconst StudentCourses = () => {\n  const {datacourse}=useSelector((state)=>state.student.cources);\n  const token=JSON.parse(sessionStorage.student_token);\n  const {data}=useSelector(state=>state.student.profile);\n\n//_____________________________________________________________________________\n  let dispatch=useDispatch();\n  let getcources=()=>{\n    dispatch(getcourseLoading());\n      axios({\n        method: \"get\",\n        url: 'http://localhost:8000/courseapi/course/',\n    }).then((response)=>{\n      \n      dispatch(getcourseSuccess(response.data));\n    }).catch((error)=>{\n      dispatch(getcourseError());\n      alert(\"Error :\"+error);\n    })\n    }\n//_____________________________________________________________________________\n    let getuser=()=>{\n      dispatch(profileLoading())\n        axios({\n          method: \"post\",\n          url: 'http://localhost:8000/managerapi/getloggedinstudent/',\n          data:{\n            Email:token.Email,\n            Password:token.Password\n            }\n      }).then((response)=>{\n        dispatch(profileSuccess(response.data));\n        getcources();\n      }).catch((error)=>{\n        dispatch(profileError());\n        let errmessage=error.response.data.Email;\n        alert(\"Error :\"+errmessage);\n      })\n      } \n//_____________________________________________________________________________\n    useEffect(()=>{\n    getuser();\n    },[])\n\n\n  return (\n    <>\n      <Studentnavbar/>    \n      <h3 style={{color:\"#28a745\", textAlign:\"center\",fontSize:\"2vw\",padding:'0px',marginTop:'2vw',fontWeight:\"600\"}}>All Courses</h3>\n      {datacourse?(<>{datacourse.map((element) => (<>\n        <StudentCourseCard key={element.Course_id} {...element} student={data[0].Student_id}/>\n      </>))}</>):(<></>)}\n    </>\n  )\n}\n\nexport default StudentCourses","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentSubscriptions.jsx",["183","184","185"],[],"/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentRegister.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/staff/Reducer.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/student/Reducer.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/student/Actions.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Staffnavbar.jsx",["186"],[],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, NavLink } from 'react-router-dom';\nimport '../styles/Staffnavbar.css';\n\nconst Doctornavbar = () => {\nlet staff_token1=sessionStorage.getItem(\"staff_token\");\nlet staff_token2=useSelector(state=>state.staff.login.staff_token);\n  return (\n    <div className='staffnav-wrapper'>\n        \n        <div className='staffnav-menu'>\n        {(staff_token1||staff_token2)?(<>\n        <ul>\n             <NavLink to=\"/staff/profile\"  className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Profile</NavLink>\n        </ul>\n        <ul>\n             <NavLink to=\"/staff/add-course\" className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Add Course</NavLink>\n        </ul>\n        <ul>\n             <NavLink to=\"/staff/students\" className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Students</NavLink>\n        </ul>\n        <ul>\n             <NavLink to=\"/staff/courses\" className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Courses</NavLink>\n        </ul>\n        </>):\n        (<>\n        <ul>\n                <NavLink to=\"/staff/login\"  className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Login</NavLink>\n        </ul>\n        <ul>\n                <NavLink to=\"/staff/register\" className={({ isActive }) => (isActive ? 'menulinks-active' : 'menulinks')}>Register</NavLink>\n        </ul>\n        </>)}\n       \n        </div>\n    </div>\n  )\n}\n\nexport default Doctornavbar","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Studentnavbar.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/StudentCourseCard.jsx",["187"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport '../styles/Coursecard.css';\n\nconst StudentCourseCard = ({Name,Description,Author,Course_id,student}) => {\nconst[author,setAuthor]=useState(null);\n  let handleSubscribe=()=>{\n  axios({\n      method: \"post\",\n      url: 'http://localhost:8000/courseapi/assign/',\n      data:{\n           Course:Course_id,\n           Student:student\n      }\n  }).then((res)=>{\n  // setAuthor(response.data.Name)\n  console.log(res)\n  }).catch((error)=>{\n  console.log(error);\n  })\n  }\n  let getauthor=()=>{\n      axios({\n        method: \"get\",\n        url: `http://localhost:8000/managerapi/staff/${Author}/`,\n    }).then((response)=>{\n    setAuthor(response.data.Name)\n    }).catch((error)=>{\n    console.log(error);\n    })\n    }\n    useEffect(()=>{\n      getauthor();\n    },[])\n\n  return (\n  <>\n  <div className=\"coursecard-wrapper\">\n    <h2 className='coursecard-title'>{Name}</h2>\n    <button style={{width:\"max-content\",margin:\"0px\",color:\"grey\",fontWeight:\"600\",fontSize:\"1vw\",backgroundColor:\"white\",border:\"1px solid\"}} disabled>Author:{author}</button>\n    <p className='coursecard-desc'><b>Description:</b>{Description}</p>\n    {/* <button style={{width:\"max-content\",margin:\"0px\",color:\"grey\",fontWeight:\"600\",fontSize:\"1vw\",backgroundColor:\"white\",border:\"1px solid\"}} disabled>Author:{author}</button> */}\n    <button className='card-button' onClick={handleSubscribe}>Subscribe</button>\n    </div>\n  </>\n  )\n}\n\nexport default StudentCourseCard","/Users/apple/Desktop/online-exam-frontend/src/redux/staff/ActionTypes.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/student/ActionTypes.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/redux/staff/Actions.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/App.js",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/AddTest.jsx",[],[],"/Users/apple/Desktop/online-exam-frontend/src/components/staffcomponents/Addquestion.jsx",["188","189","190","191"],[],"import * as React from 'react';\nimport '../styles/Forms.css';\nimport '../styles/Profile.css'\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport '../styles/Forms.css';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { addtestError, addtestLoading, addtestSuccess } from '../../redux/staff/Actions';\n\nconst style = {\n  position: 'absolute',\n  top: '15%',\n  left: '50%',\n  transform: 'translate(-50%)',\n  width:'maxContent',\n  bgcolor: 'background.paper',\n  border: '1px solid #28a745;',\n  boxShadow: 24,\n  textAlign:'center',\n  p: 4,\n};\n\nexport default function Addquestion({Test_id, name}) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [question, setQuestion]=React.useState(\"\");\n  const [op1,setOp1]=React.useState(\"\");\n  const [op2,setOp2]=React.useState(\"\");\n  const [op3,setOp3]=React.useState(\"\");\n  const [op4,setOp4]=React.useState(\"\");\n  const [corr,setCorr]=React.useState(\"\");\n\n  let dispatch=useDispatch();\n  let addques=()=>{\n if(!question){\n    alert(\"Please enter question.\")\n }\n else if(!op1||!op2||!op3||!op4||!corr){\n    alert(\"Please fill all the fields\")\n }\n else if(corr!==op1&&corr!==op2&&corr!==op3&&corr!==op4){\n    alert(\"Correct ans should be in options.\")\n }\n else{\n    axios({\n        method:\"post\",\n        url:\"http://localhost:8000/courseapi/question/\",\n        data:{\n            Test:Test_id,\n            Question:question,\n            Option1:op1,\n            Option2:op2,\n            Option3:op3,\n            Option4:op4,\n            Correct_Ans:corr,\n        }\n    }).then((response)=>{\n          alert(`Question added successfully to ${name}`)\n          handleClose();\n    }).catch((error)=>{\n           console.log(error);\n    })\n }\n}\n  return (\n    <div>\n      <button onClick={handleOpen} className='profile-button' style={{width:\"100%\"}}>Add Question</button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n         <h3 style={{color:\"#28a745\",fontSize:\"2vw\",fontWeight:\"400\",textAlign:\"center\"}}>Add Question for {name}</h3>\n         <p className='form-label'>Question</p>\n         <textarea rows = \"3\" className='course-form-textfield' placeholder=\"500 characters maximum....\" type='text'\n         value={question} onChange={(e)=>setQuestion(e.target.value)}\n         />\n         <input className='course-form-input'\n          style={{marginLeft:\"auto\",marginRight:\"auto\"}} type='text'\n          placeholder='Opton 1...'\n          value={op1} onChange={(e)=>setOp1(e.target.value)}\n          />\n          <input id=\"email\" className='course-form-input'\n          style={{marginLeft:\"auto\",marginRight:\"auto\"}} type='text'\n          placeholder='Opton 2...'\n          value={op2} onChange={(e)=>setOp2(e.target.value)}\n          />\n          <input id=\"email\" className='course-form-input'\n          style={{marginLeft:\"auto\",marginRight:\"auto\"}} type='text'\n          placeholder='Opton 3...'\n          value={op3} onChange={(e)=>setOp3(e.target.value)}\n          />\n          <input id=\"email\" className='course-form-input'\n          style={{marginLeft:\"auto\",marginRight:\"auto\"}} type='text'\n          placeholder='Opton 4...'\n          value={op4} onChange={(e)=>setOp4(e.target.value)}\n          />\n          <input id=\"email\" className='course-form-input'\n          style={{marginLeft:\"auto\",marginRight:\"auto\"}} type='text'\n          placeholder='Correct answer'\n          value={corr} onChange={(e)=>setCorr(e.target.value)}\n          />\n         <button className='form-button' onClick={addques}>Add</button>\n        </Box>\n      </Modal>\n    </div>\n  );\n}","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Subscribedcard.jsx",["192"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/Coursecard.css';\n\n//_____________________________________________________________________________\nconst Subscribedcard = ({Name,Description,Course_id,Author}) => {\n    const[author,setAuthor]=useState(null);\n    let getauthor=()=>{\n        axios({\n          method: \"get\",\n          url: `http://localhost:8000/managerapi/staff/${Author}/`,\n      }).then((response)=>{\n      setAuthor(response.data.Name);\n      \n      }).catch((error)=>{\n      console.log(error);\n      })\n      }\n//_____________________________________________________________________________\n\n//_____________________________________________________________________________\nuseEffect(()=>{\n    getauthor();\n},[])\n\n  return (\n    <div className=\"coursecard-wrapper\">\n    <h2 className='coursecard-title'>{Name}</h2>\n    <button style={{width:\"max-content\",margin:\"0px\",color:\"grey\",fontWeight:\"600\",fontSize:\"1vw\",backgroundColor:\"white\",border:\"1px solid\"}} disabled>Author:{author}</button>\n    <p className='coursecard-desc'><b>Description:</b>{Description}</p>\n    <NavLink to={`/student/test/${Course_id}`}>\n    <button className='card-button' style={{width:\"max-content\"}}>Tests</button>\n    </NavLink>\n    </div>\n  )\n}\n\nexport default Subscribedcard","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/Tests.jsx",["193"],[],"import axios from 'axios';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useParams } from 'react-router-dom'\nimport { testError, testLoading, testSuccess } from '../../redux/student/Actions';\nimport Studentnavbar from './Studentnavbar'\nimport '../styles/Coursecard.css';\n\nconst Tests = () => {\n  let course=useParams();\n  const dispatch=useDispatch();\n  let {testlist}=useSelector(state=>state.student.tests);\n\n  let getTest=()=>{\n  dispatch(testLoading());\n    axios({\n      method:\"post\",\n      url:\"http://localhost:8000/courseapi/getassignedtest/\",\n      data:{\n        Course:course.id\n      }\n    }).then((res)=>{\n      dispatch(testSuccess(res.data.data));\n    }).catch((err)=>{\n      dispatch(testError());\n    })\n  }\n  useEffect(()=>{\n    getTest();\n  },[])\n  return (<>\n    <Studentnavbar/>\n    {testlist ?(<>\n    {testlist.map((ele)=>(<>\n    <div style={{textAlign:\"center\",marginTop:\"2vw\"}}>\n    <NavLink to={`/student/taketest/${ele.Test_id}`}>\n    <button className='card-button' style={{width:\"max-content\"}}>{ele.Test_name}</button>\n    </NavLink>\n    </div>\n    </>))}\n    </>):(<>\n    <div style={{textAlign:\"center\",marginTop:\"2vw\"}}>\n    <button className='card-button' style={{width:\"max-content\"}}>No tests assigned yet</button>\n    </div>\n    </>)}\n    \n</>)\n}\n\nexport default Tests","/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/TakeTest.jsx",["194"],[],"/Users/apple/Desktop/online-exam-frontend/src/components/studentcomponents/QuestionCard.jsx",["195","196"],[],{"ruleId":"197","severity":1,"message":"198","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":43,"column":3,"nodeType":"203","endLine":43,"endColumn":5,"suggestions":"204"},{"ruleId":"197","severity":1,"message":"205","line":3,"column":23,"nodeType":"199","messageId":"200","endLine":3,"endColumn":34},{"ruleId":"197","severity":1,"message":"206","line":12,"column":9,"nodeType":"199","messageId":"200","endLine":12,"endColumn":15},{"ruleId":"197","severity":1,"message":"207","line":12,"column":17,"nodeType":"199","messageId":"200","endLine":12,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":20,"column":19,"nodeType":"210","messageId":"211","endLine":20,"endColumn":21},{"ruleId":"201","severity":1,"message":"212","line":50,"column":7,"nodeType":"203","endLine":50,"endColumn":9,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"214","line":32,"column":3,"nodeType":"203","endLine":32,"endColumn":5,"suggestions":"215"},{"ruleId":"201","severity":1,"message":"202","line":40,"column":7,"nodeType":"203","endLine":40,"endColumn":9,"suggestions":"216"},{"ruleId":"197","severity":1,"message":"205","line":4,"column":23,"nodeType":"199","messageId":"200","endLine":4,"endColumn":34},{"ruleId":"197","severity":1,"message":"217","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":50,"column":7,"nodeType":"203","endLine":50,"endColumn":9,"suggestions":"218"},{"ruleId":"197","severity":1,"message":"219","line":2,"column":28,"nodeType":"199","messageId":"200","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":44,"column":32,"nodeType":"210","messageId":"211","endLine":44,"endColumn":34},{"ruleId":"201","severity":1,"message":"220","line":71,"column":17,"nodeType":"203","endLine":71,"endColumn":19},{"ruleId":"197","severity":1,"message":"217","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":18},{"ruleId":"201","severity":1,"message":"221","line":34,"column":7,"nodeType":"203","endLine":34,"endColumn":9,"suggestions":"222"},{"ruleId":"197","severity":1,"message":"223","line":9,"column":10,"nodeType":"199","messageId":"200","endLine":9,"endColumn":22},{"ruleId":"197","severity":1,"message":"224","line":9,"column":24,"nodeType":"199","messageId":"200","endLine":9,"endColumn":38},{"ruleId":"197","severity":1,"message":"225","line":9,"column":40,"nodeType":"199","messageId":"200","endLine":9,"endColumn":54},{"ruleId":"197","severity":1,"message":"226","line":35,"column":7,"nodeType":"199","messageId":"200","endLine":35,"endColumn":15},{"ruleId":"201","severity":1,"message":"221","line":25,"column":3,"nodeType":"203","endLine":25,"endColumn":5,"suggestions":"227"},{"ruleId":"201","severity":1,"message":"228","line":30,"column":5,"nodeType":"203","endLine":30,"endColumn":7,"suggestions":"229"},{"ruleId":"201","severity":1,"message":"230","line":69,"column":11,"nodeType":"203","endLine":69,"endColumn":13,"suggestions":"231"},{"ruleId":"197","severity":1,"message":"232","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":18,"column":19,"nodeType":"235","messageId":"236","endLine":18,"endColumn":21},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getuser'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'useSelector' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getTest' and 'handlefetch'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'handlefetch'. Either include it or remove the dependency array.",["239"],["240"],"'Navigate' is defined but never used.",["241"],"'useState' is defined but never used.","Assignments to the 'subsarray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'getauthor'. Either include it or remove the dependency array.",["242"],"'addtestError' is defined but never used.","'addtestLoading' is defined but never used.","'addtestSuccess' is defined but never used.","'dispatch' is assigned a value but never used.",["243"],"React Hook useEffect has a missing dependency: 'getTest'. Either include it or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'getQuestions' and 'getuser'. Either include them or remove the dependency array.",["245"],"'useSelect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"246","fix":"252"},{"desc":"246","fix":"253"},{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [getuser]",{"range":"261","text":"262"},"Update the dependencies array to be: [getTest, handlefetch]",{"range":"263","text":"264"},"Update the dependencies array to be: [handlefetch]",{"range":"265","text":"266"},{"range":"267","text":"262"},{"range":"268","text":"262"},"Update the dependencies array to be: [getauthor]",{"range":"269","text":"270"},{"range":"271","text":"270"},"Update the dependencies array to be: [getTest]",{"range":"272","text":"273"},"Update the dependencies array to be: [getQuestions, getuser]",{"range":"274","text":"275"},[1184,1186],"[getuser]",[1414,1416],"[getTest, handlefetch]",[853,855],"[handlefetch]",[1185,1187],[1746,1748],[840,842],"[getauthor]",[819,821],[832,834],"[getTest]",[2032,2034],"[getQuestions, getuser]"]